import {Inter , Poppins } from 'next/font/google'
import '../globals.css'
import { getServerSession } from 'next-auth'
import { VscOpenPreview } from "react-icons/vsc";
import { authOptions } from '../api/auth/[...nextauth]/route'
import Sidebar from '@/components/layout/AppSidebar'
import { redirect } from 'next/navigation'
import { Toaster } from 'react-hot-toast'
import { Page } from '@/models/Page'
import mongoose from 'mongoose'
import Link from 'next/link'
import { FaArrowRightLong } from "react-icons/fa6";
const poppins = Poppins({
  weight: ["400", "500", "600", "700", "800", "900"],
  subsets: ['latin'],
})

export const metadata = {
  title: 'LinkIt',
  description: 'Generated by create next app',
}
export default async  function AppTemplate({ children , ...rest }) {
  const session = await getServerSession(authOptions);
  if(!session){
    return redirect('/')
  }
  mongoose.connect(process.env.MONGO_URI);
  const page = await Page.findOne({owner:session.user.email});

  console.log(session?.user?.image)
  return (
    <html lang="en">
      <body className={poppins.className }>
        <Toaster/>
            <main className="md:flex min-h-screen">
         <label htmlFor="navCb" className="md:hidden bg-normal-dark text-white  p-2 m-auto inline-flex items-center gap-2 cursor-pointer">
            <FaArrowRightLong/>
        </label>
      <input id="navCb" type="checkbox" className="hidden" />
      <label htmlFor="navCb" className="hidden backdrop fixed inset-0 bg-black/80 z-10"></label>
      <aside className="bg-normal-dark w-80 shadow fixed md:static -left-80 top-0 bottom-0 z-20 transition-all">
        <div className="sticky top-0 pt-2">
          <div className="flex items-center gap-x-2 ml-4 mb-10 mt-4 p-2 ">
            <div>
               <img src={session.user.image} className='h-10 w-10 rounded-full' alt={'avatar'} />
            </div>
            <div className='max-w-44 truncate'>
              <p className='text-white/80 text-sm'>Welcome<span className='text-white text-base ml-2'>{session?.user?.name}</span></p>
              <p className='text-white text-sm'> {session?.user?.email}</p>
            </div>
          </div>
          {page && (
            <div className=''>
                <Link
                target="_blank"
                    href={'/'+page.uri}
                    className="text-center line-clamp-1 py-2 px-3 rounded-l-lg hover:bg-[#222222] text-white flex gap-1  ml-2">
                      <div className='flex items-center gap-x-2'>
                        <VscOpenPreview className='text-white text-lg'/> <span className=" text-gray-300"> Preview/</span>
                      </div>
                     
                    <span>{page.uri}</span>
                </Link>
            </div>  
          
          )}
          <div className="text-center">
            <Sidebar />
          </div>
        </div>
      </aside>
      <div className="grow">
        {children}
      </div>
    </main>
      </body>
    </html>
  )
}
